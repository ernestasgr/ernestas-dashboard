name: CI

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    frontend-unit-tests:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: frontend
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: lts/*
            - name: Install dependencies
              run: npm install -g pnpm && pnpm install
            - name: Run frontend unit tests
              run: pnpm test

    auth-unit-tests:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: backend/auth
        steps:
            - uses: actions/checkout@v4
            - name: Set up JDK 24
              uses: actions/setup-java@v4
              with:
                  distribution: "temurin"
                  java-version: "24"
            - name: Make mvnw executable
              run: chmod +x mvnw
            - name: Run auth unit tests
              run: ./mvnw test

    e2e-tests:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: e2e
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: lts/*
            - name: Set up Docker Compose
              run: docker compose --version
            - name: Start Docker services
              run: docker compose -f ../docker-compose.yml up -d
            - name: Wait for frontend to be healthy
              run: |
                  for i in {1..30}; do
                    if curl -s http://localhost:3000 > /dev/null; then
                      echo "Frontend is up!" && exit 0
                    fi
                    echo "Waiting for frontend..."
                    sleep 5
                  done
                  echo "Frontend did not start in time" && exit 1
            - name: Install dependencies
              run: npm install -g pnpm && pnpm install
            - name: Install Playwright Browsers
              run: pnpm exec playwright install --with-deps
            - name: Run Playwright tests
              run: pnpm exec playwright test
            - name: Stop Docker services
              if: always()
              run: docker compose -f ../docker-compose.yml down

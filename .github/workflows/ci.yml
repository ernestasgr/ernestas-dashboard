name: CI
permissions:
    contents: read
    pull-requests: write

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    frontend-unit-tests:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: frontend
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: lts/*
            - name: Install dependencies
              run: npm install -g pnpm && pnpm install
            - name: Run frontend unit tests
              run: pnpm test

    auth-unit-tests:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: backend/auth
        steps:
            - uses: actions/checkout@v4
            - name: Set up JDK 24
              uses: actions/setup-java@v4
              with:
                  distribution: "temurin"
                  java-version: "24"
            - name: Make mvnw executable
              run: chmod +x mvnw
            - name: Run auth unit tests
              run: ./mvnw test

    tasks-unit-tests:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: backend/tasks
        steps:
            - uses: actions/checkout@v4
            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: "10.0.x"
                  dotnet-quality: "preview"
            - name: Restore dependencies
              run: dotnet restore tasks.csproj
            - name: Build
              run: dotnet build --no-restore
            - name: Run tasks unit tests
              run: dotnet test --no-build --verbosity normal

    gateway-unit-tests:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: gateway
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: lts/*
            - name: Install dependencies
              run: npm install -g pnpm && pnpm install
            - name: Run gateway unit tests
              run: pnpm test

    notes-unit-tests:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: backend/notes
        steps:
            - uses: actions/checkout@v4
            - name: Set up Python 3.13
              uses: actions/setup-python@v5
              with:
                  python-version: "3.13"
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
            - name: Run notes unit tests
              run: python -m pytest tests/ -v

    widget-registry-unit-tests:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: backend/widget-registry
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: lts/*
            - name: Install dependencies
              run: npm install -g pnpm && pnpm install
            - name: Run widget registry unit tests
              run: pnpm test

    e2e-tests:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: e2e
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: lts/*
            - name: Create .env file
              run: |
                  cat <<EOF > ../.env
                  NODE_ENV=${{ secrets.NODE_ENV }}
                  WATCHPACK_POLLING=${{ secrets.WATCHPACK_POLLING }}
                  FRONTEND_DOMAIN=${{ secrets.FRONTEND_DOMAIN }}
                  SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}
                  SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}
                  SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}
                  JWT_SECRET=${{ secrets.JWT_SECRET }}
                  JWT_ACCESS_EXPIRATION=${{ secrets.JWT_ACCESS_EXPIRATION }}
                  JWT_REFRESH_EXPIRATION=${{ secrets.JWT_REFRESH_EXPIRATION }}
                  POSTGRES_USER=${{ secrets.POSTGRES_USER }}
                  POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
                  POSTGRES_DB_AUTH=${{ secrets.POSTGRES_DB_AUTH }}
                  POSTGRES_DB_WIDGET_REGISTRY=${{ secrets.POSTGRES_DB_WIDGET_REGISTRY }}
                  AUTH_URL=${{ secrets.AUTH_URL }}
                  AUTH_REDIRECT_URL=${{ secrets.AUTH_REDIRECT_URL }}
                  GATEWAY_SECRET=${{ secrets.GATEWAY_SECRET }}
                  GATEWAY_DOMAIN=${{ secrets.GATEWAY_DOMAIN }}
                  PROFILE=${{ secrets.PROFILE }}
                  ELASTIC_PASSWORD=${{ secrets.ELASTIC_PASSWORD }}
                  ELASTICSEARCH_HOSTS=${{ secrets.ELASTICSEARCH_HOSTS }}
                  LOGSTASH_HTTP_HOST=${{ secrets.LOGSTASH_HTTP_HOST }}
                  SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID=${{ secrets.SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID }}
                  SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET=${{ secrets.SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET }}
                  SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_REDIRECT_URI=${{ secrets.SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_REDIRECT_URI }}
                  SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_SCOPE=${{ secrets.SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_SCOPE }}
                  SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENT_ID=${{ secrets.SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENT_ID }}
                  SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENT_SECRET=${{ secrets.SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENT_SECRET }}
                  SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_REDIRECT_URI=${{ secrets.SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_REDIRECT_URI }}
                  SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_SCOPE=${{ secrets.SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_SCOPE }}
                  SENTRY_DSN_AUTH=${{ secrets.SENTRY_DSN_AUTH }}
                  SENTRY_SEND_DEFAULT_PII=${{ secrets.SENTRY_SEND_DEFAULT_PII }}
                  EOF
            - name: Start Docker services
              run: docker compose -f ../docker-compose.yml up -d
            - name: Wait for gateway to be healthy
              run: ../.github/scripts/wait-for-gateway.sh "${{ secrets.GATEWAY_DOMAIN }}"
            - name: Install dependencies
              run: npm install -g pnpm && pnpm install
            - name: Install Playwright Browsers
              run: pnpm exec playwright install --with-deps
            - name: Run Playwright tests
              run: pnpm exec playwright test
            - name: Print logs on failure
              if: failure()
              run: docker compose -f ../docker-compose.yml logs
            - name: Stop Docker services
              if: always()
              run: docker compose -f ../docker-compose.yml down

FROM node:24-alpine AS base

FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

RUN npm install -g pnpm
RUN pnpm config set store-dir .pnpm-store
RUN pnpm config set node-linker hoisted

COPY package.json pnpm-lock.yaml ./
RUN pnpm install --frozen-lockfile --production=false

FROM base AS builder
WORKDIR /app

RUN npm install -g pnpm
RUN pnpm config set store-dir .pnpm-store
RUN pnpm config set node-linker hoisted

COPY --from=deps /app/node_modules ./node_modules
COPY package.json pnpm-lock.yaml ./

COPY . .

ARG NEXT_PUBLIC_GATEWAY_DOMAIN
ENV NEXT_PUBLIC_GATEWAY_DOMAIN=$NEXT_PUBLIC_GATEWAY_DOMAIN

ARG NEXT_PUBLIC_FRONTEND_URL
ENV NEXT_PUBLIC_FRONTEND_URL=$NEXT_PUBLIC_FRONTEND_URL

RUN pnpm codegen || echo "No codegen needed"

ENV NEXT_TELEMETRY_DISABLED=1
RUN pnpm build

FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder /app/public ./public

RUN mkdir .next
RUN chown nextjs:nodejs .next

COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

USER nextjs

EXPOSE 3000

ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

CMD ["node", "server.js"]

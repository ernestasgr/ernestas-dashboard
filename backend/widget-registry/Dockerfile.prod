FROM node:24-alpine AS base

FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

RUN npm install -g pnpm
RUN pnpm config set store-dir .pnpm-store
RUN pnpm config set node-linker hoisted

COPY package.json pnpm-lock.yaml ./
COPY prisma ./prisma/
RUN pnpm install --frozen-lockfile --production=false

FROM base AS builder
WORKDIR /app

RUN npm install -g pnpm
RUN pnpm config set store-dir .pnpm-store
RUN pnpm config set node-linker hoisted

COPY --from=deps /app/node_modules ./node_modules
COPY package.json pnpm-lock.yaml ./
COPY prisma ./prisma/

COPY src ./src
COPY nest-cli.json ./
COPY tsconfig.json ./
COPY tsconfig.build.json ./

RUN pnpm prisma generate
RUN pnpm build

FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 app

RUN npm install -g pnpm

COPY --from=builder --chown=app:nodejs /app/dist ./dist
COPY --from=builder --chown=app:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=app:nodejs /app/prisma ./prisma
COPY --from=builder --chown=app:nodejs /app/package.json ./package.json

COPY --chown=app:nodejs entrypoint.prod.sh /usr/local/bin/entrypoint.prod.sh
RUN chmod +x /usr/local/bin/entrypoint.prod.sh

USER app

EXPOSE 3001

ENTRYPOINT ["/usr/local/bin/entrypoint.prod.sh"]
CMD ["node", "dist/main.js"]
